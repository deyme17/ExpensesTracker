D:/ExpensesTracker/
├── main.py                                 # Точка входу для клієнтського додатку (Kivy)
├── run_api.py                              # Точка входу для Flask API-серверу
├── requirements.txt                  
│
├── app/                                    # Клієнтська частина (Kivy)
│   ├── app.py                              # Ініціалізація Kivy-додатку
│   ├── factory.py                          # Фабрика створення екранів та ініціалізації
│
│   ├── controllers/
│   │   ├── auth_controller.py              # Реєстрація, логін, збереження користувача
│   │   ├── analytics_controller.py         # Обробка графіків та статистики
│   │   ├── transaction_controller.py       # Управляння транзакціями
│
│   ├── database/
│   │   ├── db_manager.py
│   │   └── repositories/
│   │       ├── account_repository.py
│   │       ├── category_repository.py
│   │       ├── transaction_repository.py
│   │       ├── user_repository.py
│
│   ├── models/
│   │   ├── account.py                      # Модель акаунта користувача
│   │   ├── analytics.py                    # Визначення статистичних даних
│   │   ├── category.py                     # Категорії транзакцій (за MCC)
│   │   ├── currency.py                     # Валютні моделі
│   │   ├── transaction.py                  # Транзакція
│   │   ├── user.py                         # Локальний користувач
│   │   └── graphs/
│   │       ├── base_graph.py
│   │       ├── distribution_graph.py
│   │       ├── dynamics_graph.py
│   │       ├── share_graph.py
│
│   ├── services/
│   │   ├── api.py                          # Відправка запитів до Flask API
│   │   ├── auth_service.py                 # Реєстрація, логін, токен-контроль
│   │   ├── local_storage.py                # Робота з user.json, accounts.json тощо
│   │   ├── transaction_processor.py        # Сортування та фільрація транзакцій
│   │   └── crud_services/
│   │       ├── account.py
│   │       ├── static_data.py
│   │       ├── transaction.py
│   │   └── analytics/
│   │       ├── analytics_service.py
│   │       ├── graph_factory.py
│
│   ├── utils/
│   │   ├── constants.py                    # Назви екранів, UI параметри
│   │   ├── connection_manager.py.py        # Перевірка з'єднання з сервером
│   │   ├── encryption.py                   # Шифрування токена
│   │   ├── formatters.py                   # Форматування чисел, дат тощо
│   │   ├── error_codes.py                  # Зберігання кодів помилок
│   │   ├── language_mapper.py              # Переклад ключів у повідомлення
│   │   ├── theme.py                        # Кольори, стилі
│   │   ├── validators.py                   # Клієнтські валідації (із LM)
│
│   ├── views/
│       ├── screens/
│       │   ├── analytics_screen.py         # Екрани програми
│       │   ├── base_screen.py
│       │   ├── first_screen.py
│       │   ├── login_screen.py
│       │   ├── register_screen.py
│       │   ├── splash_screen.py
│       │   ├── transactions_screen.py
│       └── widgets/                       # GUI-компоненти
│           ├── analytics_widgets/         # Віджети для аналітичного екрану: графіки, статистика, фільтри
│           ├── buttons/                   # Стилізовані кнопки: іконки, таби, FAB, сегментовані
│           ├── inputs/                    # Кастомні поля вводу: текстові, дати, спіннери
│           ├── popups/                    # Універсальні спливаючі вікна: меню, алерти, інформаційні
│           └── transactions_widgets/      # Компоненти для роботи з транзакціями: додавання, фільтрація, перегляд
│  
│  
├── server/
│   ├── app.py                              # Запуск і конфігурація Flask

│   ├── api/
│   │   ├── auth_routes.py                  # /auth/register, /auth/login
│   │   ├── endpoints.py                    # /accounts, /transactions, /categories
│   │   ├── webhook_routes.py               # Обробка webhooks від Monobank
│
│   ├── database/
│   │   ├── db.py                           # SQLAlchemy engine/session
│   │   └── repositories/
│   │       ├── account_repository.py
│   │       ├── category_repository.py
│   │       ├── currency_repository.py
│   │       ├── transaction_repository.py
│   │       ├── user_repository.py
│
│   ├── models/
│   │   ├── account.py
│   │   ├── category.py
│   │   ├── currency.py
│   │   ├── transaction.py
│   │   ├── user.py
│
│   ├── services/
│   │   ├── account_service.py
│   │   ├── auth_service.py
│   │   ├── category_service.py
│   │   ├── currency_service.py
│   │   ├── transaction_service.py
│   │   ├── user_service.py
│   │   ├── webhook_service.py
│   │   └── bank_services/
│   │       ├── bank_service.py
│   │       ├── monobank_service.py
│
│   ├── utils/
│   │   ├── auth_decorator.py               # Перевірка токена для @require_auth
│   │   ├── security.py                     # Хешування, токенізація
│   │   ├── validators.py                   # Серверні валідації
│
│   ├── init_db.py                          # Ініціалізація структури БД (одноразово)